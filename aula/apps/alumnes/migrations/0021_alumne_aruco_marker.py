# Generated by Django 5.1.5 on 2025-07-06 11:43

from django.db import migrations, models

from aula.apps.alumnes.tools_aruco import dict_markers_disponibles, set_aruco_marker


def assign_aruco_markers(apps, schema_editor):  # pylint: disable=unused-argument
    """
    Assign unique aruco_marker values to each alumne based on their nivell.
    Each nivell gets its own set of numbers from 0 to 1022.
    First 100 numbers are reserved for manual assignement.
    """
    alumnemodel = apps.get_model("alumnes", "Alumne")

    # Dictionary to store markers for each nivell
    nivells_markers = dict_markers_disponibles()

    alumnes = list(
        alumnemodel.objects.select_related("grup__curs__nivell").order_by(
            "grup__curs__nivell__id", "id"
        )
    )

    for alumne in alumnes:
        set_aruco_marker(alumne, nivells_markers)
        alumne.save()


def reverse_assign_aruco_markers(
    apps, schema_editor
):  # pylint: disable=unused-argument
    """
    Reverse the assignment by setting all aruco_marker values to None.
    """
    pass  # pylint: disable=unnecessary-pass


class Migration(migrations.Migration):
    """
    Migration to add aruco_marker field to Alumne model and assign
    unique markers based on their nivell.
    """

    dependencies = [
        ("alumnes", "0020_alter_alumne_tutors_volen_rebre_correu"),
    ]

    operations = [
        migrations.AddField(
            model_name="alumne",
            name="aruco_marker",
            field=models.IntegerField(
                blank=True,
                help_text=(
                    "Identificador del marker ARUCO" " associat a " "l'alumne. "
                ),
                null=True,
                verbose_name="Marker",
            ),
        ),
        migrations.RunPython(
            assign_aruco_markers,
            reverse_code=reverse_assign_aruco_markers,
        ),
    ]
