Adaptació a Python3 i Django2

Python3:
print xxxx    →  print (xxxxxx)
unicode(text)  →   str(text)
except Exception, e:   →   except Exception as e:
import  pathrelatiu.xxxx   →  from .pathrelatiu import xxxx
from pathrelatiu import xxxx →  from .pathrelatiu import xxxx
<>  →   !=
import cStringIO as StringIO  →  from io import StringIO
aula/utils/tools.py
              variable str →  strc
force_unicode  →  force_text
xrange →  range
dictionary.iteritems()  →  iter(dictionary.items())
dictionary.iterkeys()  →  iter(dictionary.keys())
dictionary.items()  →  list(dictionary.items())
dictionary.keys()  →  list(dictionary.keys())
dictionary.values()  →  list(dictionary.values())
map(...)  →  list(map(....))
range  →  list(range)
def __unicode__(self):  →  def __str__(self):

Django2:
.is_authenticated()  →  .is_authenticated
.is_anonymous()  →  .is_anonymous
paginate={"klass":DiggPaginator → paginate={"paginator_class":DiggPaginator
django.core.urlresolvers →  django.urls
MIDDLEWARE_CLASSES  →  MIDDLEWARE
include(admin.site.urls)  →  admin.site.urls
from django.contrib.auth.views import password_change  → from django.contrib.auth.views import PasswordChangeView
password_change →  PasswordChangeView.as_view()
Afegir on_delete=models.CASCADE
middleware.py:
    Canvis a cada class
      class XXXXXXXXXXXX(object):   →  class XXXXXXXXXXXX:
         def __init__(self, get_response): 
             self.get_response = get_response

         def __call__(self, request):
             return self.get_response(request)
